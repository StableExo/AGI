digraph G {
  rankdir="LR";
  node [shape=box, style=rounded];
  "idea_options" -> "idea_encrypt";
  "idea_ecb_encrypt" -> "idea_encrypt";
  "idea_ofb64_encrypt" -> "idea_encrypt";
  "idea_cfb64_encrypt" -> "idea_encrypt";
  "idea_cbc_encrypt" -> "idea_encrypt";
  "idea_encrypt" -> "idea_encrypt";
  "idea_set_encrypt_key" -> "inverse";
  "idea_set_decrypt_key" -> "inverse";
  "inverse" -> "inverse";
  "BF_cfb64_encrypt" -> "BF_encrypt";
  "BF_options" -> "BF_encrypt";
  "BF_options" -> "BF_decrypt";
  "BF_ecb_encrypt" -> "BF_encrypt";
  "BF_ecb_encrypt" -> "BF_decrypt";
  "BF_encrypt" -> "BF_encrypt";
  "BF_encrypt" -> "BF_decrypt";
  "BF_decrypt" -> "BF_encrypt";
  "BF_decrypt" -> "BF_decrypt";
  "BF_cbc_encrypt" -> "BF_encrypt";
  "BF_cbc_encrypt" -> "BF_decrypt";
  "BF_ofb64_encrypt" -> "BF_encrypt";
  "RC2_set_key";
  "RC2_ofb64_encrypt" -> "RC2_encrypt";
  "RC2_cfb64_encrypt" -> "RC2_encrypt";
  "RC2_ecb_encrypt" -> "RC2_decrypt";
  "RC2_ecb_encrypt" -> "RC2_encrypt";
  "RC2_cbc_encrypt" -> "RC2_decrypt";
  "RC2_cbc_encrypt" -> "RC2_encrypt";
  "RC2_encrypt" -> "RC2_decrypt";
  "RC2_encrypt" -> "RC2_encrypt";
  "RC2_decrypt" -> "RC2_decrypt";
  "RC2_decrypt" -> "RC2_encrypt";
}
