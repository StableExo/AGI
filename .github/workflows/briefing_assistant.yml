name: Briefing Assistant

on:
  pull_request:
    types: [opened, edited]

jobs:
  run_briefing_assistant:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install and Run Briefing Assistant
        id: briefing
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock.txt
          # The following block ensures that the EOF delimiter is always written,
          # even if the python script fails. This is the resilient architectural pattern.
          set +e
          output=$(python -m briefing_assistant.main 2>&1)
          set -e
          echo "report<<EOF" >> $GITHUB_OUTPUT
          echo "$output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post Briefing as Comment
        uses: actions/github-script@v6
        # Use an environment variable to safely pass the report body
        env:
          REPORT_BODY: ${{ steps.briefing.outputs.report }}
        if: steps.briefing.outputs.report != ''
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: process.env.REPORT_BODY
            });